// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/08/2022 19:49:28"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          bus64_split_out
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module bus64_split_out_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [63:0] input;
// wires                                               
wire [15:0] aa;
wire [15:0] bb;
wire [15:0] cc;
wire [15:0] dd;

// assign statements (if any)                          
bus64_split_out i1 (
// port map - connection between master ports and signals/registers   
	.aa(aa),
	.bb(bb),
	.cc(cc),
	.dd(dd),
	.\input (input)
);
initial 
begin 
#1000000 $finish;
end 
// \input [ 63 ]
initial
begin
	input[63] = 1'b0;
end 
// \input [ 62 ]
initial
begin
	input[62] = 1'b0;
end 
// \input [ 61 ]
initial
begin
	input[61] = 1'b0;
end 
// \input [ 60 ]
initial
begin
	input[60] = 1'b0;
end 
// \input [ 59 ]
initial
begin
	input[59] = 1'b0;
end 
// \input [ 58 ]
initial
begin
	input[58] = 1'b0;
end 
// \input [ 57 ]
initial
begin
	input[57] = 1'b0;
end 
// \input [ 56 ]
initial
begin
	input[56] = 1'b0;
end 
// \input [ 55 ]
initial
begin
	input[55] = 1'b0;
end 
// \input [ 54 ]
initial
begin
	input[54] = 1'b0;
end 
// \input [ 53 ]
initial
begin
	input[53] = 1'b0;
end 
// \input [ 52 ]
initial
begin
	input[52] = 1'b0;
end 
// \input [ 51 ]
initial
begin
	input[51] = 1'b0;
end 
// \input [ 50 ]
initial
begin
	input[50] = 1'b0;
end 
// \input [ 49 ]
initial
begin
	input[49] = 1'b0;
end 
// \input [ 48 ]
initial
begin
	input[48] = 1'b0;
end 
// \input [ 47 ]
initial
begin
	input[47] = 1'b0;
end 
// \input [ 46 ]
initial
begin
	input[46] = 1'b0;
end 
// \input [ 45 ]
initial
begin
	input[45] = 1'b0;
end 
// \input [ 44 ]
initial
begin
	input[44] = 1'b0;
end 
// \input [ 43 ]
initial
begin
	input[43] = 1'b0;
end 
// \input [ 42 ]
initial
begin
	input[42] = 1'b0;
end 
// \input [ 41 ]
initial
begin
	input[41] = 1'b0;
end 
// \input [ 40 ]
initial
begin
	input[40] = 1'b0;
end 
// \input [ 39 ]
initial
begin
	input[39] = 1'b0;
end 
// \input [ 38 ]
initial
begin
	input[38] = 1'b0;
end 
// \input [ 37 ]
initial
begin
	input[37] = 1'b0;
end 
// \input [ 36 ]
initial
begin
	input[36] = 1'b0;
end 
// \input [ 35 ]
initial
begin
	input[35] = 1'b0;
end 
// \input [ 34 ]
initial
begin
	input[34] = 1'b0;
end 
// \input [ 33 ]
initial
begin
	input[33] = 1'b0;
end 
// \input [ 32 ]
initial
begin
	input[32] = 1'b0;
end 
// \input [ 31 ]
initial
begin
	input[31] = 1'b0;
end 
// \input [ 30 ]
initial
begin
	input[30] = 1'b0;
end 
// \input [ 29 ]
initial
begin
	input[29] = 1'b0;
end 
// \input [ 28 ]
initial
begin
	input[28] = 1'b0;
end 
// \input [ 27 ]
initial
begin
	input[27] = 1'b0;
end 
// \input [ 26 ]
initial
begin
	input[26] = 1'b0;
end 
// \input [ 25 ]
initial
begin
	input[25] = 1'b0;
end 
// \input [ 24 ]
initial
begin
	input[24] = 1'b0;
end 
// \input [ 23 ]
initial
begin
	input[23] = 1'b0;
end 
// \input [ 22 ]
initial
begin
	input[22] = 1'b0;
end 
// \input [ 21 ]
initial
begin
	input[21] = 1'b0;
end 
// \input [ 20 ]
initial
begin
	input[20] = 1'b0;
end 
// \input [ 19 ]
initial
begin
	input[19] = 1'b0;
end 
// \input [ 18 ]
initial
begin
	input[18] = 1'b0;
end 
// \input [ 17 ]
initial
begin
	input[17] = 1'b0;
end 
// \input [ 16 ]
initial
begin
	input[16] = 1'b0;
end 
// \input [ 15 ]
initial
begin
	input[15] = 1'b0;
end 
// \input [ 14 ]
initial
begin
	input[14] = 1'b0;
end 
// \input [ 13 ]
initial
begin
	input[13] = 1'b0;
end 
// \input [ 12 ]
initial
begin
	input[12] = 1'b0;
end 
// \input [ 11 ]
initial
begin
	input[11] = 1'b0;
end 
// \input [ 10 ]
initial
begin
	input[10] = 1'b0;
end 
// \input [ 9 ]
initial
begin
	input[9] = 1'b0;
end 
// \input [ 8 ]
initial
begin
	input[8] = 1'b0;
end 
// \input [ 7 ]
initial
begin
	input[7] = 1'b0;
end 
// \input [ 6 ]
initial
begin
	input[6] = 1'b0;
	input[6] = #640000 1'b1;
end 
// \input [ 5 ]
initial
begin
	input[5] = 1'b0;
	input[5] = #320000 1'b1;
	input[5] = #320000 1'b0;
	input[5] = #320000 1'b1;
end 
// \input [ 4 ]
initial
begin
	repeat(3)
	begin
		input[4] = 1'b0;
		input[4] = #160000 1'b1;
		# 160000;
	end
	input[4] = 1'b0;
end 
// \input [ 3 ]
initial
begin
	repeat(6)
	begin
		input[3] = 1'b0;
		input[3] = #80000 1'b1;
		# 80000;
	end
	input[3] = 1'b0;
end 
// \input [ 2 ]
initial
begin
	repeat(12)
	begin
		input[2] = 1'b0;
		input[2] = #40000 1'b1;
		# 40000;
	end
	input[2] = 1'b0;
end 
// \input [ 1 ]
always
begin
	input[1] = 1'b0;
	input[1] = #20000 1'b1;
	#20000;
end 
// \input [ 0 ]
always
begin
	input[0] = 1'b0;
	input[0] = #10000 1'b1;
	#10000;
end 
endmodule

